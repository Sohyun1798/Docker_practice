1.3 Linux

* 가상메모리 영역 swap: 메모리 용량에 제한이 있음. 메모리의 물리적인 용량을 초과하는 프로그램 혹은 데이터를 전개할 때는
하드디스크와 같은 보조기억장치에 가상 메모리 영역을 만듦.
이용 빈도가 낮은 데이터를 스왑아웃, 스왑상의 데이터를 메모리로 되돌리는 것은 스왑인.

* 파일시스템(virtual file system): 데이터 투과 액세스

* 주요 디렉토리
- /bin ls, cp 같은 기본 커맨드 저장. 특권 사용자, 일반 사용자 모두 이용하는 명령어들
- /boot linux 커널 등 os의 시작에 필요한 파일을 배치하는 디렉토리
- /dev 하드디스크, 키보드, 디바이스 파일을 저장하는 디렉토리
- /etc os 나 어플리케이션이 작동하는 데 필요한 설정 파일이 저장되어 있는 디렉토리
- /home 일반 사용자의 홈 디렉토리
- /proc 커널이나 프로세스에 관한 정보가 저장되어 있는 디렉토리. cpuinfo, partitions, version
- /sbin 시스템 관리용 마운트가 저장되어 있는 디렉토리.
- /tmp 일시적으로 사용하는 파일 등을 저장하는 임시 디렉토리. 서버를 재시작하면 사라져 버림.
- /usr 각종 프로그램이나 커널 소스가 저장되는 디렉토리. /usr/local -> 시스템 관리자가 애플리케이션을 설치하는 장소
- /var 시스템의 가동과 함께 변화하는 파일을 놓아두는 디렉토리. /var/log , /var/spool

1.4 Middleware 기초지식

* 미들웨어란?: os와 업무처리를 수행하는 애플리케이션 사이에 들어가는 소프트웨어.

* 웹 서버: 클라이언트의 브라우저가 보내온 HTTP요청을 받아, 웹 콘텐츠(HTML, CSS 등)를 응답으로 반환하거나
다른 서버사이드 프로그램을 호출하는 기능을 갖고 있는 서버.
- Apache HTTP Server: 오픈소스 웹서버.
- Internet Information Services: microsoft가 제공하는 웹 서버. Windows Server 시리즈와 같은
os 제품에 들어 있음. 업무시스템등에서 주로 이용. GUI 관리 툴로 설정이나 관리를 할 수 있음.
- Nginx: 오픈소스 웹 서버. 소비 메모리가 적으며 리버스 프록시 기능과 로드밸런서 기능도 갖고 있음.

* 데이터베이스 서버: 시스템이 생성하는 다양한 데이터를 관리하기 위한 미들웨어. 데이터의 검색, 등록, 변경, 삭제와 같은
기본 기능 외에, 트랜잭션 처리 등도 포함 -> 데이터베이스 관리 시스템(DBMS)
- MySQL: 관계형 데이터베이스 관리 시스템(RDBMS)
- PostgreSQL
- Oracle Database

<-> NoSQL: RDBMS와는 다른 새로운 방식을 통틀어 일컫는 말. 병렬분산처리나 유연한 스키마 설정이 특징. KVS(Key-value store),
도큐먼트 지향 데이트베이스, XML 데이터베이스 등이 있음. 대량의 데이터 축적이나 병렬처리에 뛰어남. -> 다수의 사용자 액세스 처리가
필요한 온라인 시스템등에서 널리 이용.
- Redis: 메모리상에 KVS를 구축할 수 있는 OSS의 NoSQL.
- MongoDB: 도큐먼트라는 구조적 데이터를 콜렉션으로 관리하는 OSS의 NoSQL. 도큐먼트에는 복잡한 계층 구조를 가질 수 있어서
그러한 구조에 포함되는 필드를 지정한 쿼리나 인덱스 생성이 가능. 온라인 게임이나 로그 분석 등에 사용.
- Apache Cassandra: 하나의 key에 여러 개의 칼럼을 가지고, 관계형 테이블에 가까운 데이터 구조를 갖고 있음.

* 시스템 감시 툴: 시스템의 감시 대상인 서버나 장비의 상태를 감시하여 미리 설정한 경계값을 초과한 경우에 정해진 액션을 실행.
- Zabbix: 수집한 데이터를 저장하기 위해 MySQL, PostgreSQL, Oracle Database, DB2 등을 이용.
- Datadog: 통합감시 서버를 도입할 필요 없이 웹 브라우저에서 통합감시를 할 수 있는 서비스.
- Mackerel: 통합감시 서버를 도입할 필요 없이 웹 브라우저에서 통합감시를 할 수 있는 서비스.

